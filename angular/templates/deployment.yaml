apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ include "angular.fullname" . }}
  labels:
    {{- include "angular.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "angular.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "angular.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.containerPort }}
              protocol: TCP
          env:
            - name: SERVER_NAME
              value: {{ .Values.server_name }}
            - name: STAFF_URL
              value: {{ .Values.ingress.staff.staff_url | default (printf "staff.%s" .Values.server_name) }}  
          volumeMounts:
            - name: timezone
              mountPath: /etc/localtime
              readOnly: true
          livenessProbe:
            httpGet:
              path: /
              port: 4000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 4000
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          resources:
              requests:
                cpu: {{ .Values.resources.requestsCPU}}
                memory: {{ .Values.resources.requestsMemory}}  
      volumes:
        - name: timezone
          hostPath:
            path: /usr/share/zoneinfo/Asia/Kuwait
            type: File
      {{- if .Values.nodeSelector }}
      nodeSelector: 
        doks.digitalocean.com/node-pool: {{ .Values.nodeSelector }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        - effect: "{{ .Values.tolerations.effect }}"
          key: "{{ .Values.tolerations.key }}"
          operator: "{{ .Values.tolerations.operator }}"
          value: "{{ .Values.tolerations.value }}"
      {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    name: api
                topologyKey: "kubernetes.io/hostname"